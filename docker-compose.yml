version: "3.8"

services:
  ecommerceapp.webui:
    container_name: webui_container
    image: hikdogru/ecommerceappwebui:latest
    build:
      context: .
      dockerfile: src/ECommerceApp.WebUI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8008
      - MongoConnectionString__Connection=mongodb://admin:toor@mongo:27017
      - MongoConnectionString__DatabaseName=ecommerceapp
      - ConnectionStrings__ApplicationDbContextConnection=Server=mssql;Database=ECommerceApp;User ID=sa;Password=Roottoor123!;Trust Server Certificate=True;MultipleActiveResultSets=True
    ports:
      - "8008:8008"
    volumes:
      - usersecrets:/root/.microsoft/usersecrets:ro
      - aspnethttps:/root/.aspnet/https:ro
      - images:/app/wwwroot/assets/images

    depends_on:
      - mongo
      - mssql
      - ecommerceapp.catalogservice
    networks:
      - backend
  mongo:
    container_name: mongo_container
    image: mongo:latest
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: toor
    ports:
      - "27017:27017"
    volumes:
      - mongodata:/data/db
    networks:
      - backend
    restart: always

  seq:
    container_name: seq
    image: datalust/seq:latest
    ports:
      - "5342:80"
    volumes:
      - seqdata:/data
    environment:
      - ACCEPT_EULA=Y
    networks:
      - backend
    restart: unless-stopped

  mssql:
    container_name: mssql_container
    image: justin2004/mssql_server_tiny
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Roottoor123!"
    ports:
      - 1433:1433
    volumes:
      - mssqldata:/var/opt/mssql
    networks:
      - backend
    restart: always

  ecommerceapp.authservice:
    container_name: authservice_container
    image: hikdogru/ecommerceappauthservice:latest
    build:
      context: .
      dockerfile: src/Services/Auth/ECommerceApp.AuthService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8009
      - MongoConnectionString__Connection=mongodb://admin:toor@mongo:27017
      - MongoConnectionString__DatabaseName=ecommerceapp
      - ConnectionStrings__ApplicationDbContextConnection=Server=mssql;Database=ECommerceApp;User ID=sa;Password=Roottoor123!;Trust Server Certificate=True;MultipleActiveResultSets=True
    ports:
      - "8009:8009"
    depends_on:
      - mongo
      - mssql
    networks:
      - backend

  ecommerceapp.apigateway:
    container_name: apigateway_container
    image: hikdogru/ecommerceappapigateway:latest
    build:
      context: .
      dockerfile: src/Gateway/ECommerceApp.ApiGateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8010
    ports:
      - "8010:8010"
    depends_on:
      - ecommerceapp.authservice
      - ecommerceapp.catalogservice
    networks:
      - backend

  ecommerceapp.catalogservice:
    container_name: catalogservice_container
    image: hikdogru/ecommerceappcatalogservice:latest
    build:
      context: .
      dockerfile: src/Services/Catalog/ECommerceApp.CatalogService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8011
      - MongoConnectionString__Connection=mongodb://admin:toor@mongo:27017
      - MongoConnectionString__DatabaseName=ecommerceapp
      - ConnectionStrings__ApplicationDbContextConnection=Server=mssql;Database=ECommerceApp;User ID=sa;Password=Roottoor123!;Trust Server Certificate=True;MultipleActiveResultSets=True
      - ServiceUrls__CatalogService=http://ecommerceapp.catalogservice:8011
    ports:
      - "8011:8011"
    depends_on:
      - mongo
      - mssql
    networks:
      - backend

  redis:
    container_name: redis_container
    image: redis
    ports:
      - "6379:6379"
    networks:
      - backend

networks:
  backend:
    driver: bridge
    external: true

volumes:
  usersecrets:
  aspnethttps:
  mongodata:
  images:
  seqdata:
  mssqldata:
