# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - ecomapp

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'
          include-prerelease: true

      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build ECommerceAppSolution.sln --configuration Release

      - name: dotnet publish
        run: dotnet publish ECommerceAppSolution.sln -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: .net-app

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'ecomapp'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_1C72C95FE2284C78875DF44A6E34BCC2 }}
          package: .
  
  docker_hub:
   runs-on: ubuntu-latest
   steps:
     - name: Checkout
       uses: actions/checkout@v3

     - name: Login to Docker Hub
       uses: docker/login-action@v2
       with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}

     - name: Create Docker network
       run:  docker network create backend

     - name: Set up Docker Compose
       run:  docker-compose -f docker-compose.yml up -d

    - name: Wait for SQL Server to start
      run: |
        # Replace 'sql-server-container' with the name of your SQL Server container
        until docker exec mssql_container /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P Roottoor123! -Q "SELECT 1"; do
          sleep 1
        done 

     - name: Build and Push Docker Image
       run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push      
                   
     - name: Set up SSH
       uses: appleboy/ssh-action@master
       with:
          host: ${{ secrets.AZURE_VM_HOST }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          username: ${{ secrets.AZURE_VM_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ecommerceapp/ECommerceAppSolution && \
            git pull && \
            docker-compose -f docker-compose.yml pull && \
            docker-compose -f docker-compose.yml up -d
   

      
      
         
             

  
        
            
    

         

         




     

   
