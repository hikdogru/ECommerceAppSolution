@model SpecificationModel

<div id="kt_app_toolbar" class="app-toolbar  py-1 py-lg-6 ">

    <!--begin::Toolbar container-->
    <div id="kt_app_toolbar_container" class="app-container  container-xxl d-flex flex-stack ">



        <!--begin::Page title-->
        <div class="page-title d-flex flex-column justify-content-center flex-wrap me-1 ">
            <!--begin::Title-->
            <h1 class="page-heading d-flex text-dark fw-bold fs-3 flex-column justify-content-center my-0">
                Specifications
            </h1>
            <!--end::Title-->
            <!--begin::Breadcrumb-->
            <ul class="breadcrumb breadcrumb-separatorless fw-semibold fs-7 my-0 pt-1">
                <!--begin::Item-->
                <li class="breadcrumb-item text-muted">
                    <a href="/admin" class="text-muted text-hover-primary">
                        Home
                    </a>
                </li>
                <!--end::Item-->
                <!--begin::Item-->
                <li class="breadcrumb-item">
                    <span class="bullet bg-gray-400 w-5px h-2px"></span>
                </li>
                <!--end::Item-->
                <!--begin::Item-->
                <li class="breadcrumb-item text-muted">
                    Catalog
                </li>
                <!--end::Item-->
                <!--begin::Item-->
                <li class="breadcrumb-item">
                    <span class="bullet bg-gray-400 w-5px h-2px"></span>
                </li>
                <!--end::Item-->
                <!--begin::Item-->
                <li class="breadcrumb-item text-muted">
                    Specification
                </li>
                <!--end::Item-->

            </ul>
            <!--end::Breadcrumb-->
        </div>
        <!--end::Page title-->

    </div>
    <!--end::Toolbar container-->
</div>


<div id="kt_app_content" class="app-content  flex-column-fluid " data-select2-id="select2-data-kt_app_content">


    <!--begin::Content container-->
    <div id="kt_app_content_container" class="app-container  container-xxl "
        data-select2-id="select2-data-kt_app_content_container">
        <div id="grid"></div>
    </div>
</div>


<div class="modal fade" id="specificationCreateModal" tabindex="-1" aria-hidden="true">
    <!--begin::Modal dialog-->
    <div class="modal-dialog modal-dialog-centered mw-650px">
        <!--begin::Modal content-->
        <div class="modal-content rounded">
            <!--begin::Modal header-->
            <div class="modal-header pb-0 border-0 justify-content-end">
                <!--begin::Close-->
                <div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">
                    <i class="ki-duotone ki-cross fs-1"><span class="path1"></span><span class="path2"></span></i>
                </div>
                <!--end::Close-->
            </div>
            <!--begin::Modal header-->
            <!--begin::Modal body-->
            <div class="modal-body scroll-y px-10 px-lg-15 pt-0 pb-15">
                <form class="form" asp-action="Create" asp-controller="Specification" method="post"
                    id="createSpecificationForm">
                    <div class="mb-13 text-center">
                        <h1 class="mb-3">Create Specification</h1>

                    </div>

                    <div class="card card-flush py-4">

                        <div class="card-body">


                            <ul class="nav nav-tabs nav-line-tabs mb-1 fs-4">

                                @for (int i = 0; i < Model.SpecificationLanguages.Count; i++)
                                {
                                    var specificationLanguage = Model.SpecificationLanguages[i];
                                    <li class="nav-item">
                                        <a class="nav-link @(i == 0 ? "active" : "")" data-bs-toggle="tab"
                                            href="#productTabPanel@(specificationLanguage.LanguageCode)">@specificationLanguage.LanguageCode</a>
                                    </li>
                                }
                            </ul>

                            @for (int i = 0; i < Model.SpecificationLanguages.Count; i++)
                            {
                                var specificationLanguage = Model.SpecificationLanguages[i];
                                <input type="hidden" asp-for="SpecificationLanguages[i].LanguageId" />
                                <input type="hidden" asp-for="SpecificationLanguages[i].LanguageCode" />

                                <div class="tab-content" id="myTabContent">
                                    <div class="tab-pane fade @(i == 0 ? "show active" : "")"
                                        id="productTabPanel@(specificationLanguage.LanguageCode)" role="tabpanel">
                                        <!--begin::General options-->
                                        <div class="card card-flush py-4">
                                            <!--begin::Card body-->
                                            <div class="card-body p-0">
                                                <!--begin::Input group-->
                                                <div class="mb-5 fv-row fv-plugins-icon-container">
                                                    <!--begin::Label-->
                                                    <label class="required form-label">Specification Name</label>
                                                    <!--end::Label-->
                                                    <!--begin::Input-->
                                                    <input asp-for="SpecificationLanguages[i].Name"
                                                        class="form-control mb-2" placeholder="Specification name"
                                                        autocomplete="off">
                                                    <span asp-validation-for="SpecificationLanguages[i].Name"
                                                        class="text-danger"></span>
                                                    <!--end::Input-->
                                                </div>
                                                <!--end::Input group-->
                                                

                                            </div>
                                            <!--end::Card header-->
                                        </div>
                                        <!--end::General options-->
                                    </div>
                                </div>

                            }
                        </div>
                    </div>

                    <div class="text-center">
                        <button type="submit" class="btn btn-primary" id="createButton">
                            <span class="indicator-label">
                                Submit
                            </span>
                            <span class="indicator-progress">
                                Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                            </span>
                        </button>
                    </div>

                </form>
            </div>
            <!--end::Modal body-->
        </div>
        <!--end::Modal content-->
    </div>
    <!--end::Modal dialog-->
</div>




<div class="modal fade" id="specificationEditModal" tabindex="-1" aria-hidden="true">
    <!--begin::Modal dialog-->
    <div class="modal-dialog modal-dialog-centered mw-650px">
        <!--begin::Modal content-->
        <div class="modal-content rounded">
            <!--begin::Modal header-->
            <div class="modal-header pb-0 border-0 justify-content-end">
                <!--begin::Close-->
                <div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">
                    <i class="ki-duotone ki-cross fs-1"><span class="path1"></span><span class="path2"></span></i>
                </div>
                <!--end::Close-->
            </div>
            <!--begin::Modal header-->
            <!--begin::Modal body-->
            <div class="modal-body scroll-y px-10 px-lg-15 pt-0 pb-15">
                <form class="form" asp-action="Edit" asp-controller="Specification" method="post"                
                    id="editSpecificationForm">
                     <input type="hidden" id="editSpecificationId" name="Id" />
                    <div class="mb-5 text-center">
                        <h1 class="mb-3">Edit Specification</h1>

                    </div>

                    <div class="card card-flush py-4">

                        <div class="card-body">


                            <ul class="nav nav-tabs nav-line-tabs mb-1 fs-4">

                                @for (int i = 0; i < Model.SpecificationLanguages.Count; i++)
                                {
                                    var specificationLanguage = Model.SpecificationLanguages[i];
                                    <li class="nav-item">
                                        <a class="nav-link @(i == 0 ? "active" : "")" data-bs-toggle="tab"
                                            href="#productEditTabPanel@(specificationLanguage.LanguageCode)">@specificationLanguage.LanguageCode</a>
                                    </li>
                                }
                            </ul>

                            @for (int i = 0; i < Model.SpecificationLanguages.Count; i++)
                            {
                                var specificationLanguage = Model.SpecificationLanguages[i];
                                <input type="hidden" asp-for="SpecificationLanguages[i].Id" id="SpecificationLanguages@(i).Id"/>
                                <input type="hidden" asp-for="SpecificationLanguages[i].LanguageId" id="SpecificationLanguages@(i).LanguageId"/>
                                <input type="hidden" asp-for="SpecificationLanguages[i].LanguageCode" id="SpecificationLanguages@(i).LanguageCode"/>

                                <div class="tab-content" id="myTabContent">
                                    <div class="tab-pane fade @(i == 0 ? "show active" : "")"
                                        id="productEditTabPanel@(specificationLanguage.LanguageCode)" role="tabpanel">
                                        <!--begin::General options-->
                                        <div class="card card-flush py-4">
                                            <!--begin::Card body-->
                                            <div class="card-body p-0">
                                                <!--begin::Input group-->
                                                <div class="mb-5 fv-row fv-plugins-icon-container">
                                                    <!--begin::Label-->
                                                    <label class="required form-label">Specification Name</label>
                                                    <!--end::Label-->
                                                    <!--begin::Input-->
                                                    <input asp-for="SpecificationLanguages[i].Name" id="SpecificationLanguages@(i).Name"
                                                        class="form-control mb-2" placeholder="Specification name"
                                                        autocomplete="off">
                                                    <span asp-validation-for="SpecificationLanguages[i].Name"
                                                        class="text-danger"></span>
                                                    <!--end::Input-->
                                                </div>
                                                <!--end::Input group-->                                               
                                            </div>
                                            <!--end::Card header-->
                                        </div>
                                        <!--end::General options-->
                                    </div>
                                </div>

                            }
                        </div>
                    </div>

                    <div class="text-center">
                        <button type="submit" class="btn btn-primary" id="createButton">
                            <span class="indicator-label">
                                Submit
                            </span>
                            <span class="indicator-progress">
                                Please wait... <span class="spinner-border spinner-border-sm align-middle ms-2"></span>
                            </span>
                        </button>
                    </div>

                </form>
            </div>
            <!--end::Modal body-->
        </div>
        <!--end::Modal content-->
    </div>
    <!--end::Modal dialog-->
</div>



@section TopLevelJS
{
    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript" src="/assets/plugins/custom/tinymce/tinymce.bundle.js"></script>
}


@section Scripts
{
    <script>
        // kendo grid
        $(document).ready(function () {
            tinymceEditor();
            dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: '@Url.Action("GetAll", "Specification", new { area = "Admin" })',
                        dataType: "json",
                        type: "post"
                    },
                    parameterMap: function (options, operation) {
                        if (operation === "read") {
                            options.filter = options.filter || [];
                            return {
                                page: options.page,
                                pageSize: options.pageSize,
                                filter: options.filter
                            };
                        }
                    }
                },

                pageSize: 10,
                serverPaging: true,
                serverSorting: true,
                serverFiltering: true,
                width: "100%",
                scrollable: true,
                schema: {
                    data: "data",
                    total: "total"
                }
            });

            $("#grid").kendoGrid({
                dataSource: dataSource,
                navigatable: true,
                pageable: {
                    refresh: true,
                    pageSizes: true,
                    buttonCount: 5
                },
                filterable: {
                    operators: {
                        string: {
                            eq: "Eşit",
                            neq: "Eşit Değil",
                            startswith: "Başlayan",
                            contains: "İçeren",
                            doesnotcontain: "İçermeyen",
                            endswith: "Biten"
                        }
                    }
                },
                search: {
                    fields: [
                        { name: "name", operator: "contains" }

                    ]
                },
                toolbar:
                    [
                        { name: "search" },
                        {
                            name: "create",
                            text: "Add new item",
                            template: function (dataItem) {
                                return '<button class="btn btn-primary btn-sm m-1" data-bs-toggle="modal" data-bs-target="#specificationCreateModal"><span class="k-icon k-i-plus k-icon-18"></button>';
                            }
                        }
                    ],

                columns:
                    [
                        { field: "id", title: "Id", width: 20, hidden: true },
                        {
                            field: "name",
                            title: "özellik",
                            width: 30,
                            filterable: false
                        },
                        {
                            field: "language",
                            title: "Dil",
                            width: 30,
                            filterable: false
                        },
                        {
                            command: [
                                { name: "detail", text: "Detail", template: '<button class="btn btn-success btn-sm m-1" id="btnDetail"><span class="k-icon k-i-eye k-icon-18"></span></button>', width: 9 },
                                { name: "delete", text: "Delete", template: '<button class="btn btn-danger btn-sm" id="btnDelete"><span class="k-icon k-i-trash k-icon-18"></span></button>', width: 9 }
                            ],
                            title: "&nbsp;",
                            width: 18
                        }
                    ],
                filterable: true
            });

            $("#grid th").css("text-align", "center");
            $("#grid tbody").css("text-align", "center");


            $("#grid").on("click",
                "#btnDelete",
                function (e) {
                    e.preventDefault();
                    var tr = $(this).closest("tr");
                    var dataItem = $("#grid").data("kendoGrid").dataItem(tr);

                    if (confirm("Kayıt Silinsin Mi?")) {
                        // Perform the delete operation
                        $.ajax({
                            url: "@Url.Action("Delete", "Specification", new { Area = "Admin" })",
                            type: "DELETE",
                            data: { id: dataItem.id },
                            success: function (response) {
                                if (response.success) {
                                    var dataSource = $("#grid").data("kendoGrid").dataSource;
                                    // Refresh the grid
                                    dataSource.read();
                                }
                            },
                            error: function (xhr, status, error) {
                                console.error(error);
                            },
                        });
                    }
                });

            // For to clear search input
            let clearButton = '<span class="k-link k-link-clear" aria-label="Clear the Search"><span unselectable="on" class="k-icon k-i-close"></span></span>';
            $(".k-grid-search").append(clearButton);
            $(".k-link-clear").click(function () {
                $(".k-grid-search input").val("").trigger("input");
            });




            $('#createSpecificationForm').submit(function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    url: form.attr('action'),
                    method: form.attr('method'),
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            // Close specificationCreateModal modal
                            $('#specificationCreateModal').modal('hide');
                            // Clear form fields
                            form[0].reset();
                            // Refresh the kendo grid
                            dataSource.read();
                        } else {
                            // Handle validation errors
                            displayValidationErrors(response.errors);
                        }
                    },
                    error: function () {
                        // Handle the AJAX request error
                        alert("An error occurred while submitting the form.");
                    }
                });
            });


            $("#grid").on("click",
                "#btnDetail",
                function (e) {
                    e.preventDefault();
                    // Make an AJAX request to fetch specification data
                    var tr = $(this).closest("tr");
                    var dataItem = $("#grid").data("kendoGrid").dataItem(tr);

                    $.ajax({
                        url: "@Url.Action("Edit", "Specification", new { Area = "Admin" })/" + dataItem.id, 
                        type: "GET",
                        dataType: "json",
                        success: function (response) {
                            if (response.success) {   
                                console.log(response.data);
                                  const specificationId = document.getElementById('editSpecificationId');
                                    specificationId.value = response.data.id;
                                console.log(specificationId);

                                $.each(response.data.specificationLanguages, function (index, language) {
                                    const inputId = 'SpecificationLanguages' + index + '.Name';
                                    const nameElement = document.getElementById(inputId);
                                    nameElement.value = language.name;

                                     const langRefId = 'SpecificationLanguages' + index + '.Id';
                                    const langRefElement = document.getElementById(langRefId);
                                    console.log(langRefElement);
                                    langRefElement.value = language.id;
                                });
                                // Open the modal
                                $("#specificationEditModal").modal("show");
                            }
                        },
                        error: function (error) {
                            console.log(error);
                        }
                    });
                });

            $('#editSpecificationForm').submit(function (e) {
                e.preventDefault();
                var form = $(this);
                $.ajax({
                    url: form.attr('action'),
                    method: form.attr('method'),
                    data: form.serialize(),
                    success: function (response) {
                        if (response.success) {
                            // Close specificationCreateModal modal
                            $('#specificationEditModal').modal('hide');
                            // Clear form fields
                            form[0].reset();
                            // Refresh the kendo grid
                            dataSource.read();
                        } else {
                            // Handle validation errors
                            displayValidationErrors(response.errors);
                        }
                    },
                    error: function () {
                        // Handle the AJAX request error
                        alert("An error occurred while submitting the form.");
                    }
                });
            });
            function displayValidationErrors(errors) {
                // Clear previous validation error messages
                $('.validation-error').empty();

                // Display the new validation errors
                $.each(errors, function (key, value) {
                    var errorSpan = $('[data-valmsg-for="' + key + '"]');
                    errorSpan.html(value);
                });
            }


        });



    </script>
}